version: "3.9"

services:

  db:
    image: postgres:14.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB={{cookiecutter.project_slug}}
      - POSTGRES_USER={{cookiecutter.postgres_user}}
      - POSTGRES_PASSWORD={{cookiecutter.postgres_password}}
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  django:
    build:
      context: .
      dockerfile: local.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=psql://{{cookiecutter.postgres_user}}:{{cookiecutter.postgres_password}}@db:5432/{{cookiecutter.project_slug}}
      - CELERY_BROKER_URL=redis://localhost:6379/2
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: on-failure
{% if cookiecutter.use_celery %}
    ELASTIC_APM_DISABLE_SEND = True
  celery:
    build:
      context: .
      dockerfile: local.Dockerfile
    command: celery -A config.celery worker -l info --without-gossip --without-mingle --without-heartbeat
    environment:
      - DATABASE_URL=psql://postgres:postgres@db:5432/{{cookiecutter.project_slug}}
      - CELERY_BROKER_URL=redis://localhost:6379/2
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: local.Dockerfile
    command: celery -A config.celery beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_URL=psql://{{cookiecutter.postgres_user}}:{{cookiecutter.postgres_password}}@db:5432/{{cookiecutter.project_slug}}
      - CELERY_BROKER_URL=redis://localhost:6379/2
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure

{% endif %}

volumes:
    postgres-data:
    redis-data:

